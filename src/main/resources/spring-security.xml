<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security 
            http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <security:http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">
        <security:csrf disabled="true" />
        <!--<security:form-login login-page="/login.html" authentication-failure-url="/error.html"/>-->
        <!--单用户登录-->
        <security:session-management>
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </security:session-management>
        <!--自定义 Filter security有好多个FILTER ,可以配几个-->
        <security:custom-filter ref="trainingFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
        <!--配置这个自定义的验证 Filter必须把aotu-confi关闭-->
        <security:custom-filter ref="trainingUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER" />
        <!--sessionId失效的识货跳转到另一个URL-->
        <security:session-management invalid-session-url="/sessionTimeout.html" />
    </security:http>
    <bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login.html" />
    </bean>


    <bean id="trainingFilterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    <property name="accessDecisionManager" ref="accessDecisionManager" />
    <property name="authenticationManager" ref="authenticationManager" />
    <property name="securityMetadataSource" ref="trainingSecurityMetadataSource" />
    </bean>

    <bean id="trainingUsernamePasswordAuthenticationFilter" class="com.training.sysmanager.security.TrainingUsernamePasswordAuthenticationFilter" >
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService"/>
    </security:authentication-manager>

    <bean id="accessDecisionManager" class="com.training.sysmanager.security.TrainingAccessDecisionManager">
        <constructor-arg name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
            </list>
        </constructor-arg>
    </bean>
    <!-- 虽然自定义前缀成功了,但是依然会读取defaultRolePrefix = "ROLE_" 不知何解 -->
    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <property name="rolePrefix" value="AUTH_"></property>
    </bean>

    <bean id="userDetailsService" class="com.training.sysmanager.security.TrainingUserDetailsServiceImpl">
    </bean>
    <!-- 获取数据库中所有的url资源，读出url资源与权限的对应关系  -->
    <!--注意!!!!!!! 因为SecurityMetadataSource 不支持注解注入,所以使用构造器注入-->
    <bean id="trainingSecurityMetadataSource" class="com.training.sysmanager.security.TrainingSecurityMetadataSource">
        <constructor-arg ref="aclResourcesService" ></constructor-arg>
    </bean>
    <bean id="aclRoleService" class="com.training.sysmanager.service.aclrole.impl.AclRoleServiceImpl"/>
    <bean id="aclResourcesService" class="com.training.sysmanager.service.aclresources.impl.AclResourcesServiceImpl"/>

</beans>