<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>


    <!-- 注册自己的数据类型 -->
    <settings>
        <setting name="cacheEnabled" value="true" />
        <!-- 全局性设置懒加载 -->
        <setting name="lazyLoadingEnabled" value="true" />
        <!-- 允许和不允许单条语句返回多个数据集  -->
        <setting name="multipleResultSetsEnabled" value="true" />
        <!-- 使用列标签代替列名称 -->
        <setting name="useColumnLabel" value="true" />
        <!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行 -->
        <setting name="useGeneratedKeys" value="false" />
        <!-- 指定MyBatis 是否并且如何来自动映射数据表字段与对象的属性。PARTIAL将只自动映射简单的，没有嵌套的结果。FULL 将自动映射所有复杂的结果。 -->
        <setting name="autoMappingBehavior" value="PARTIAL" />
        <!-- 配置和设定执行器，SIMPLE 执行器执行其它语句。REUSE 执行器可能重复使用prepared statements 语句，BATCH执行器可以重复执行语句和批量更新。 -->
        <setting name="defaultExecutorType" value="SIMPLE" />
        <!-- 设置一个时限，以决定让驱动器等待数据库回应的多长时间为超时 -->
        <setting name="defaultStatementTimeout" value="25000" />
        <!-- 允许在嵌套语句中使用行分界（RowBounds） -->
        <setting name="safeRowBoundsEnabled" value="false" />
        <!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射-->
        <setting name="mapUnderscoreToCamelCase" value="false" />
        <!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。 -->
        <setting name="localCacheScope" value="SESSION" />
        <!-- 指定哪个对象的方法触发一次延迟加载。 -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
    </settings>
    <!-- 别名 -->
    <typeAliases>
        <package name="com.training"/>
    </typeAliases>

    <typeHandlers>
    </typeHandlers>
    <!-- 拦截器 -->
    <!-- dao扫描 -->
    <mappers>
        <package name="com.training.**.mapper"/>
    </mappers>
</configuration>